{
	"id": "e2bc2ac2-40ba-2866-aab2-16b5fd2d6f61",
	"name": "Volunteer Test Collection",
	"description": "\nStereotypes\n=====================\n\nTest1 (Manager all)\n- Has Global role USER\n- Test1 Read, Write, Delete\n- testGroup1 Manager\n- testTask1 Manager\n- testPost1 Read, Write, Delete\n\nTest2 (no permissions but own)\n- Has global role USER\n- Test2 Read, Write, Delete\n\n\nTest3 (Member for all of Test1's objects)\n- Has global role USER\n- Test3 read, write, delete\n- testGroup1 member\n- testTask1 member\n- testTask2 manager\n- testPost2 Read, Write, Delete\n\nTest4 (Member of testGroup1 but not task)\n- Has Global role USER\n- Test4 read, write, delete\n- testGroup1 member\n\n\n\n\nTest1\n=================\n\nCreation\n-------------------\n1. Users\n    - Create user Test1\n    - verify data fidelity\n\n2. Groups\n   - Test1 creates group testGroup1\n    - Check if Test1 is a manager of testGroup1\n    - verify data fidelity\n\n3. Tasks\n    - Test1 creates testTask1 inside groupTest1\n    - Check if Test1 is a manager of testTask1\n    - verify data fidelity\n\n4. Posts\n    - Test1 creates testPost1\n    - Check if Test1 has write permission to testPost1\n    - verify data fidelity\n\nUpdate\n------------\n1. Users\n    - make partial edit to Test1\n    - verify data\n    - make full edit to Test1\n    - verify data\n\n2. Group\n    - make partial edit to testGroup1\n    - verify data\n    - make full update to testGroup1\n    - verify data\n\n3. Task\n    - partial edit to testTask1\n    - verify data\n    - full update to testTask1\n    - verify data\n\n4. Post\n    - partial edit to testPost1\n    - verify data\n    - full update to testPost1\n    - verify data\n\nDeletion\n--------------\n1. User\n    - N/A for now\n\n2. Group \n    - delete testGroup1\n    - get testGroup1\n    - recreate testGroup1 with diff description\n    - verify data\n    - verify testTask1 deletion\n    - verify testPost1 deletion\n    - recreate testTask1\n    - recreate testPost1\n\n3. Task\n    - delete testTask1\n    - get testTask1\n    - create testTask1 with diff description\n    - verify data\n\n4. Post\n    - delete testPost1\n    - get testPost1\n    - create testPost1 with diff description\n    - verify data\n\nAnticipated Conflicts\n-------------------------\n1. Users\n    - Attempt duplicate Test1\n    - Attempt to get non existing user\n    - attempt to delete non existing user\n\n2. Group\n    - Attempt duplicates testGroup1\n    - Attempt to get non existing \n    - attempt to delete non existing group\n\n3. Task\n    - Attempt duplicates testTask1\n    - Attempt to get non existing \n    - attempt to delete non existing task\n\n4. Post\n    - Attempt duplicates testPost1\n    - Attempt to get non existing \n    - attempt to delete non existing post\n\nTest2\n=======================\n\nObject Creation\n----------------------\n1. Users\n    - Create Test2\n\nSecurity \n-------------------------\n1. Users\n    - User2 attempts to edit User1\n    - Verify data\n\n2. Groups (no group permissions)\n    - User2 attempts to edit testGroup1\n    - User2 attempts to put testGroup1\n    - User2 attempts to delete testGroup1\n    - User2 attempts to resetManager of testGroup1 to User2\n    - User2 attempts to addManager to testGroup1 \n    - User2 attempts to deleteManager Test1 from testGroup1\n    - verify data\n\n3. Tasks (no group permissions, no task permissions)\n    - User2 attempts to edit testTask1\n    - User2 attempts to put testTask1\n    - User2 attempts to delete testTask1\n    - User2 attempts to resetManager of testTask1 to User2\n    - User2 attempts to addManager to testTask1 \n    - User2 attempts to deleteManager Test1 from testTask1\n    - verify data\n\n4. Posts (no group permissions, no post permissions)\n    - User2 attempts to create testPost2 from testGroup1\n    - User2 attempts to edit testPost1\n    - User2 attempts to put testPost1\n    - User2 attempts to delete testPost1\n    - verify data\n\nTest3\n===========================\n_Todo_\n\n\nTest4\n===========================\n_Todo_",
	"order": [],
	"folders": [
		{
			"id": "b4871e5d-7e93-c32a-bc34-f21e43d798f9",
			"name": "Test1 Creation",
			"description": "",
			"order": [
				"61586966-54ca-43ed-8f71-c3c1db1fd653",
				"de338425-92f9-e431-368b-774b0fa06ce3",
				"1203e19c-c521-1768-ed5f-5085a794a187",
				"ab785553-8942-67cc-0e91-d8e2dfb11589",
				"465c5661-b55f-2a14-b026-5421389e5d53",
				"64c91732-c40c-a303-cfcc-7dbfd84f01fe",
				"a9b58a06-2597-45b3-184e-eafd3ba30f48",
				"8192bde6-e246-5b78-2f8f-c7b086f2775f",
				"967db9d5-a6aa-803a-da72-86f27c9a11fa",
				"501bf0ae-8a43-3b7e-a34b-bd0111e8559b",
				"7de83c88-caa3-0da3-9843-4a3096a4a4d3"
			],
			"collection_name": "Volunteer Test Collection",
			"collection_id": "e2bc2ac2-40ba-2866-aab2-16b5fd2d6f61"
		},
		{
			"id": "1843f10a-218d-14a2-c8bd-805da635d0df",
			"name": "Test1 Update",
			"description": "",
			"order": [
				"2bd63053-60ac-62a5-3e79-565abf858c78",
				"8ab2f452-77bd-0dbc-799f-3213601c3c92",
				"0f54441f-6d05-c4e3-ad68-c34d8b863e3a",
				"e99b9ed8-58fa-3904-cf53-a35886268bf1",
				"0dac1e74-b9c4-c7c1-6aec-2f1e4a2eea91",
				"9e083308-ba18-3952-a9f5-68d096332b8c",
				"2941b744-5844-80dd-3759-cba78ab5fa5d",
				"9f6c8409-b2dc-ee2c-a48a-e0b2af526ab8",
				"f614ee23-34df-23e5-2b83-dba508a68e24",
				"f1204406-b381-ddd8-28e4-f83f9445965c",
				"c9a3c662-915a-406a-f6b1-a206530e877b",
				"7246c7b3-6faf-11fd-1b01-876557ccfe0c",
				"7c6f1060-f712-a062-3805-c99dff1b5e71",
				"c5080c25-13f5-8638-68c8-51344debc9af",
				"565c3edb-a60f-2635-5b62-d8c9fca32b34",
				"4c0ed3aa-6e9e-f6e2-5879-59af9cfae9bb"
			],
			"collection_name": "Volunteer Test Collection",
			"collection_id": "e2bc2ac2-40ba-2866-aab2-16b5fd2d6f61"
		}
	],
	"timestamp": 1408049685887,
	"synced": false,
	"requests": [
		{
			"id": "0dac1e74-b9c4-c7c1-6aec-2f1e4a2eea91",
			"headers": "Authorization: {{Test1 auth}}\nContent-Type: application/json\n",
			"url": "{{URL}}groups/{{testGroup1.id}}",
			"preRequestScript": "",
			"pathVariables": {},
			"method": "POST",
			"data": "{\"description\":\"partial change to description\"}",
			"dataMode": "raw",
			"version": 2,
			"tests": "\n\n\n\ntests[\"Status code is 200\"] = responseCode.code === 200;",
			"time": 1408389267802,
			"name": "Partial Update testGroup1 ",
			"description": "",
			"collectionId": "e2bc2ac2-40ba-2866-aab2-16b5fd2d6f61",
			"responses": [],
			"synced": false
		},
		{
			"id": "0f54441f-6d05-c4e3-ad68-c34d8b863e3a",
			"headers": "Authorization: {{Test1 auth}}\nContent-Type: application/json\n",
			"url": "{{URL}}users/{{Test1.id}}",
			"preRequestScript": "",
			"pathVariables": {},
			"method": "PUT",
			"data": "{\"id\":\"{{Test1.id}}\" ,\"username\":\"Test1\", \"firstName\":\"first\", \"lastName\":\"Last\", \"city\":\"houston\",\"cellPhone\":\"1234567890\", \"email\":\"testupdate@gmail.com\"}",
			"dataMode": "raw",
			"version": 2,
			"tests": "\n\n\n\ntests[\"Status code is 200\"] = responseCode.code === 200;",
			"time": 1408309944490,
			"name": "Full Update Test1",
			"description": "",
			"collectionId": "e2bc2ac2-40ba-2866-aab2-16b5fd2d6f61",
			"responses": [],
			"synced": false
		},
		{
			"id": "1203e19c-c521-1768-ed5f-5085a794a187",
			"headers": "Authorization: {{Test1 auth}}\nContent-Type: application/json\n",
			"url": "{{URL}}groups/",
			"preRequestScript": "",
			"pathVariables": {},
			"method": "POST",
			"data": "{\"name\":\"testGroup1\", \"description\":\"this is a test description with fun characters 1234567890!@#$%^&*()\"}",
			"dataMode": "raw",
			"version": 2,
			"tests": "tests[\"Status code is 201\"] = responseCode.code === 201;\n\npostman.setEnvironmentVariable(\"testGroup1.id\", responseHeaders[\"ObjectId\"]);\n\n\n",
			"time": 1408228202353,
			"name": "Create Group testGroup",
			"description": "",
			"collectionId": "e2bc2ac2-40ba-2866-aab2-16b5fd2d6f61",
			"responses": [],
			"synced": false
		},
		{
			"id": "2941b744-5844-80dd-3759-cba78ab5fa5d",
			"headers": "Authorization: {{Test1 auth}}\nContent-Type: application/json\n",
			"url": "{{URL}}groups/{{testGroup1.id}}",
			"preRequestScript": "",
			"pathVariables": {},
			"method": "PUT",
			"data": "{\"id\":\"{{testGroup1.id}}\",\"name\":\"testGroup1\", \"description\":\"\"}",
			"dataMode": "raw",
			"version": 2,
			"tests": "\n\n\n\ntests[\"Status code is 200\"] = responseCode.code === 200;",
			"time": 1408389870285,
			"name": "Full Update Test1 copy",
			"description": "",
			"collectionId": "e2bc2ac2-40ba-2866-aab2-16b5fd2d6f61",
			"responses": [],
			"synced": false
		},
		{
			"id": "2bd63053-60ac-62a5-3e79-565abf858c78",
			"headers": "Authorization: {{Test1 auth}}\nContent-Type: application/json\n",
			"url": "{{URL}}users/{{Test1.id}}",
			"preRequestScript": "",
			"pathVariables": {},
			"method": "POST",
			"data": "{\"homePhone\":\"2818888123\"}",
			"dataMode": "raw",
			"version": 2,
			"tests": "\n\n\n\ntests[\"Status code is 200\"] = responseCode.code === 200;",
			"time": 1408303171602,
			"name": "Partial Update Test1",
			"description": "",
			"collectionId": "e2bc2ac2-40ba-2866-aab2-16b5fd2d6f61",
			"responses": [],
			"synced": false
		},
		{
			"id": "465c5661-b55f-2a14-b026-5421389e5d53",
			"headers": "Authorization: {{Test1 auth}}\nContent-Type: application/json\n",
			"url": "{{URL}}groups/{{testGroup1.id}}",
			"preRequestScript": "",
			"pathVariables": {},
			"method": "GET",
			"data": [],
			"dataMode": "params",
			"version": 2,
			"tests": "\nvar data1 = {\"name\":\"testGroup1\", \"description\":\"this is a test description with fun characters 1234567890!@#$%^&*()\"};\n\nvar data2 = xmlToJson(responseBody);\n\ndelete data2.group.id;\ndelete data2.group.creation_timestamp;\ntests[\"testGroup1 correct data\"] = JSON.stringify(data1) == JSON.stringify(data2.group);\n\n",
			"time": 1408228196109,
			"name": "Verify testGroup1",
			"description": "",
			"collectionId": "e2bc2ac2-40ba-2866-aab2-16b5fd2d6f61",
			"responses": [],
			"synced": false
		},
		{
			"id": "4c0ed3aa-6e9e-f6e2-5879-59af9cfae9bb",
			"headers": "Authorization: {{Test1 auth}}\nContent-Type: application/json\n",
			"url": "{{URL}}tasks/{{testTask1.id}}",
			"preRequestScript": "",
			"pathVariables": {},
			"method": "GET",
			"data": [],
			"dataMode": "params",
			"version": 2,
			"tests": "\nvar data1 = {\"group_id\":environment[\"testGroup1.id\"],\"name\":\"testTask1\"};\n\nvar data2 = xmlToJson(responseBody);\n\ndelete data2.task.id;\ndelete data2.task.creation_timestamp;\ndelete data2.task.duration;\ndelete data2.task.finished;\ntests[\"testTask1 correct data\"] = JSON.stringify(data1) == JSON.stringify(data2.task);\n",
			"time": 1408472812303,
			"name": "Verify testTask1 after full update",
			"description": "",
			"collectionId": "e2bc2ac2-40ba-2866-aab2-16b5fd2d6f61",
			"responses": [],
			"synced": false
		},
		{
			"id": "501bf0ae-8a43-3b7e-a34b-bd0111e8559b",
			"headers": "Authorization: {{Test1 auth}}\nContent-Type: application/json\n",
			"url": "{{URL}}posts/myPosts",
			"preRequestScript": "",
			"pathVariables": {},
			"method": "GET",
			"data": [],
			"dataMode": "params",
			"version": 2,
			"tests": "\nvar data1 = { \"group_id\":environment[\"testGroup1.id\"], \"user_id\":environment[\"Test1.id\"], \"content\":\"this is the content with fun characters 1234567890!@#$%^&*()\", \"like_count\":\"0\"};\n\nvar data2 = xmlToJson(responseBody).posts;\n\ndelete data2.post.id;\ndelete data2.post.creation_timestamp;\ndelete data2.post.latest_activity_timestamp;\ntests[\"testPost1 correct data\"] = JSON.stringify(data1) == JSON.stringify(data2.post);\n\n\n\n\n\n\npostman.setEnvironmentVariable(\"data\", JSON.stringify(data1));\npostman.setEnvironmentVariable(\"data2\", JSON.stringify(data2.post));",
			"time": 1408302343148,
			"name": "Check myPosts of Test1",
			"description": "",
			"collectionId": "e2bc2ac2-40ba-2866-aab2-16b5fd2d6f61",
			"responses": [],
			"synced": false
		},
		{
			"id": "565c3edb-a60f-2635-5b62-d8c9fca32b34",
			"headers": "Authorization: {{Test1 auth}}\nContent-Type: application/json\n",
			"url": "{{URL}}tasks/{{testTask1.id}}",
			"preRequestScript": "",
			"pathVariables": {},
			"method": "PUT",
			"data": "{\"group_id\":\"{{testGroup1.id}}\",\"name\":\"testTask1\"}",
			"dataMode": "raw",
			"version": 2,
			"tests": "\n\n\n\ntests[\"Status code is 200\"] = responseCode.code === 200;",
			"time": 1408472745501,
			"name": "Full Update testTask1",
			"description": "",
			"collectionId": "e2bc2ac2-40ba-2866-aab2-16b5fd2d6f61",
			"responses": [],
			"synced": false
		},
		{
			"id": "61586966-54ca-43ed-8f71-c3c1db1fd653",
			"headers": "Authorization: Basic VmlzaXRvcjp0ZXN0\nContent-Type: application/json\n",
			"url": "{{URL}}users/",
			"preRequestScript": "",
			"pathVariables": {},
			"method": "POST",
			"data": "{\"username\":\"Test1\", \"password\":\"test\", \"firstName\":\"first\", \"lastName\":\"last\", \"city\":\"houston\", \"homePhone\":\"2818888208\",\"cellPhone\":\"1234567890\", \"email\":\"test@gmail.com\"}",
			"dataMode": "raw",
			"version": 2,
			"tests": "tests[\"Status code is 201\"] = responseCode.code === 201;\n\npostman.setEnvironmentVariable(\"Test1.id\", responseHeaders[\"ObjectId\"]);\n\n\n",
			"time": 1408217304733,
			"name": "Create User Test1",
			"description": "",
			"collectionId": "e2bc2ac2-40ba-2866-aab2-16b5fd2d6f61",
			"responses": [],
			"synced": false
		},
		{
			"id": "64c91732-c40c-a303-cfcc-7dbfd84f01fe",
			"headers": "Authorization: {{Test1 auth}}\nContent-Type: application/json\n",
			"url": "{{URL}}tasks/",
			"preRequestScript": "",
			"pathVariables": {},
			"method": "POST",
			"data": "{\"group_id\":\"{{testGroup1.id}}\" , \"name\":\"testTask1\"}",
			"dataMode": "raw",
			"version": 2,
			"tests": "tests[\"Status code is 201\"] = responseCode.code === 201;\n\npostman.setEnvironmentVariable(\"testTask1.id\", responseHeaders[\"ObjectId\"]);\n\n\n",
			"time": 1408228190193,
			"name": "Create Task testTask1",
			"description": "",
			"collectionId": "e2bc2ac2-40ba-2866-aab2-16b5fd2d6f61",
			"responses": [],
			"synced": false
		},
		{
			"id": "7246c7b3-6faf-11fd-1b01-876557ccfe0c",
			"headers": "Authorization: {{Test1 auth}}\nContent-Type: application/json\n",
			"url": "{{URL}}posts/{{testPost1.id}}",
			"preRequestScript": "",
			"pathVariables": {},
			"method": "GET",
			"data": [],
			"dataMode": "params",
			"version": 2,
			"tests": "\nvar data1 = { \"group_id\":environment[\"testGroup1.id\"], \"user_id\":environment[\"Test1.id\"], \"content\":\"full change to content\", \"like_count\":\"0\"};\n\nvar data2 = xmlToJson(responseBody);\n\ndelete data2.post.id;\ndelete data2.post.creation_timestamp;\ndelete data2.post.latest_activity_timestamp;\ntests[\"testPost1 correct data\"] = JSON.stringify(data1) == JSON.stringify(data2.post);\n\n\n\n\n\n\npostman.setEnvironmentVariable(\"data\", JSON.stringify(data1));\npostman.setEnvironmentVariable(\"data2\", JSON.stringify(data2.post));",
			"time": 1408396656041,
			"name": "Verify testPost1 after full update",
			"description": "",
			"collectionId": "e2bc2ac2-40ba-2866-aab2-16b5fd2d6f61",
			"responses": [],
			"synced": false
		},
		{
			"id": "7c6f1060-f712-a062-3805-c99dff1b5e71",
			"headers": "Authorization: {{Test1 auth}}\nContent-Type: application/json\n",
			"url": "{{URL}}tasks/{{testTask1.id}}",
			"preRequestScript": "",
			"pathVariables": {},
			"method": "POST",
			"data": "{\"description\":\"partial change to description\"}",
			"dataMode": "raw",
			"version": 2,
			"tests": "\n\n\n\ntests[\"Status code is 200\"] = responseCode.code === 200;",
			"time": 1408471230190,
			"name": "Partial Update testTask1",
			"description": "",
			"collectionId": "e2bc2ac2-40ba-2866-aab2-16b5fd2d6f61",
			"responses": [],
			"synced": false
		},
		{
			"id": "7de83c88-caa3-0da3-9843-4a3096a4a4d3",
			"headers": "Authorization: {{Test1 auth}}\nContent-Type: application/json\n",
			"url": "{{URL}}posts/{{testPost1.id}}",
			"preRequestScript": "",
			"pathVariables": {},
			"method": "GET",
			"data": [],
			"dataMode": "params",
			"version": 2,
			"tests": "\nvar data1 = { \"group_id\":environment[\"testGroup1.id\"], \"user_id\":environment[\"Test1.id\"], \"content\":\"this is the content with fun characters 1234567890!@#$%^&*()\", \"like_count\":\"0\"};\n\nvar data2 = xmlToJson(responseBody);\n\ndelete data2.post.id;\ndelete data2.post.creation_timestamp;\ndelete data2.post.latest_activity_timestamp;\ntests[\"testPost1 correct data\"] = JSON.stringify(data1) == JSON.stringify(data2.post);\n\n\n\n\n\n\npostman.setEnvironmentVariable(\"data\", JSON.stringify(data1));\npostman.setEnvironmentVariable(\"data2\", JSON.stringify(data2.post));",
			"time": 1408302351293,
			"name": "Verify testPost1",
			"description": "",
			"collectionId": "e2bc2ac2-40ba-2866-aab2-16b5fd2d6f61",
			"responses": [],
			"synced": false
		},
		{
			"id": "8192bde6-e246-5b78-2f8f-c7b086f2775f",
			"headers": "Authorization: {{Test1 auth}}\nContent-Type: application/json\n",
			"url": "{{URL}}tasks/{{testTask1.id}}",
			"preRequestScript": "",
			"pathVariables": {},
			"method": "GET",
			"data": [],
			"dataMode": "params",
			"version": 2,
			"tests": "\nvar data1 = {\"group_id\":environment[\"testGroup1.id\"],\"name\":\"testTask1\"};\n\nvar data2 = xmlToJson(responseBody);\n\ndelete data2.task.id;\ndelete data2.task.creation_timestamp;\ndelete data2.task.duration;\ndelete data2.task.finished;\ntests[\"testTask1 correct data\"] = JSON.stringify(data1) == JSON.stringify(data2.task);\n",
			"time": 1408301538527,
			"name": "Verify testTask1",
			"description": "",
			"collectionId": "e2bc2ac2-40ba-2866-aab2-16b5fd2d6f61",
			"responses": [],
			"synced": false
		},
		{
			"id": "8ab2f452-77bd-0dbc-799f-3213601c3c92",
			"headers": "Authorization: {{Test1 auth}}\nContent-Type: application/json\n",
			"url": "{{URL}}users/{{Test1.id}}",
			"preRequestScript": "",
			"pathVariables": {},
			"method": "GET",
			"data": [],
			"dataMode": "params",
			"version": 2,
			"tests": "\nvar data1 = {\"username\":\"Test1\", \"firstName\":\"first\", \"lastName\":\"last\", \"city\":\"houston\", \"homePhone\":\"2818888123\",\"cellPhone\":\"1234567890\", \"email\":\"test@gmail.com\"};\n\nvar data2 = xmlToJson(responseBody);\n\ndelete data2.user.id;\ndelete data2.user.insertionDate;\ntests[\"Correct Test1 data\"] = JSON.stringify(data1) == JSON.stringify(data2.user);\n\n\n",
			"time": 1408303256256,
			"name": "Verify User Test1 after partial update",
			"description": "",
			"collectionId": "e2bc2ac2-40ba-2866-aab2-16b5fd2d6f61",
			"responses": [],
			"synced": false
		},
		{
			"id": "967db9d5-a6aa-803a-da72-86f27c9a11fa",
			"headers": "Authorization: {{Test1 auth}}\nContent-Type: application/json\n",
			"url": "{{URL}}posts/",
			"preRequestScript": "",
			"pathVariables": {},
			"method": "POST",
			"data": "{\"user_id\":\"{{Test1.id}}\", \"group_id\":\"{{testGroup1.id}}\", \"content\":\"this is the content with fun characters 1234567890!@#$%^&*()\", \"like_count\":\"0\"}",
			"dataMode": "raw",
			"version": 2,
			"tests": "tests[\"Status code is 201\"] = responseCode.code === 201;\n\npostman.setEnvironmentVariable(\"testPost1.id\", responseHeaders[\"ObjectId\"]);\n\n\n",
			"time": 1408235485386,
			"name": "Create Post testPost1",
			"description": "",
			"collectionId": "e2bc2ac2-40ba-2866-aab2-16b5fd2d6f61",
			"responses": [],
			"synced": false
		},
		{
			"id": "9e083308-ba18-3952-a9f5-68d096332b8c",
			"headers": "Authorization: {{Test1 auth}}\nContent-Type: application/json\n",
			"url": "{{URL}}groups/{{testGroup1.id}}",
			"preRequestScript": "",
			"pathVariables": {},
			"method": "GET",
			"data": [],
			"dataMode": "params",
			"version": 2,
			"tests": "\nvar data1 = {\"name\":\"testGroup1\", \"description\":\"partial change to description\"};\n\nvar data2 = xmlToJson(responseBody);\n\ndelete data2.group.id;\ndelete data2.group.creation_timestamp;\ntests[\"testGroup1 correct data\"] = JSON.stringify(data1) == JSON.stringify(data2.group);\n\n",
			"time": 1408389447751,
			"name": "Verify testGroup1 after partial update",
			"description": "",
			"collectionId": "e2bc2ac2-40ba-2866-aab2-16b5fd2d6f61",
			"responses": [],
			"synced": false
		},
		{
			"id": "9f6c8409-b2dc-ee2c-a48a-e0b2af526ab8",
			"headers": "Authorization: {{Test1 auth}}\nContent-Type: application/json\n",
			"url": "{{URL}}groups/{{testGroup1.id}}",
			"preRequestScript": "",
			"pathVariables": {},
			"method": "GET",
			"data": [],
			"dataMode": "params",
			"version": 2,
			"tests": "\nvar data1 = {\"name\":\"testGroup1\", \"description\":\"\"};\n\nvar data2 = xmlToJson(responseBody);\n\ndelete data2.group.id;\ndelete data2.group.creation_timestamp;\ntests[\"testGroup1 correct data\"] = JSON.stringify(data1) == JSON.stringify(data2.group);\n\n",
			"time": 1408389960898,
			"name": "Verify testGroup1 after full update",
			"description": "",
			"collectionId": "e2bc2ac2-40ba-2866-aab2-16b5fd2d6f61",
			"responses": [],
			"synced": false
		},
		{
			"id": "a9b58a06-2597-45b3-184e-eafd3ba30f48",
			"headers": "Authorization: {{Test1 auth}}\nContent-Type: application/json\n",
			"url": "{{URL}}tasks/byManager",
			"preRequestScript": "",
			"pathVariables": {},
			"method": "GET",
			"data": [],
			"dataMode": "params",
			"version": 2,
			"tests": "\nvar data1 = {\"group_id\":environment[\"testGroup1.id\"],\"name\":\"testTask1\"};\n\nvar data2 = xmlToJson(responseBody).tasks;\n\ndelete data2.task.id;\ndelete data2.task.creation_timestamp;\ndelete data2.task.duration;\ndelete data2.task.finished;\ntests[\"testTask1 correct data\"] = JSON.stringify(data1) == JSON.stringify(data2.task);\n",
			"time": 1408301546081,
			"name": "Check tasks where manager of Test1",
			"description": "",
			"collectionId": "e2bc2ac2-40ba-2866-aab2-16b5fd2d6f61",
			"responses": [],
			"synced": false
		},
		{
			"id": "ab785553-8942-67cc-0e91-d8e2dfb11589",
			"headers": "Authorization: {{Test1 auth}}\nContent-Type: application/json\n",
			"url": "{{URL}}groups/byManager",
			"preRequestScript": "",
			"pathVariables": {},
			"method": "GET",
			"data": [],
			"dataMode": "params",
			"version": 2,
			"tests": "\nvar data1 = {\"name\":\"testGroup1\", \"description\":\"this is a test description with fun characters 1234567890!@#$%^&*()\"};\n\nvar data2 = xmlToJson(responseBody);\n\ndelete data2.groups.group.id;\ndelete data2.groups.group.creation_timestamp;\ntests[\"testGroup1 correct data\"] = JSON.stringify(data1) == JSON.stringify(data2.groups.group);\n\n",
			"time": 1408301303227,
			"name": "Check groups where manager of Test1",
			"description": "",
			"collectionId": "e2bc2ac2-40ba-2866-aab2-16b5fd2d6f61",
			"responses": [],
			"synced": false
		},
		{
			"id": "c5080c25-13f5-8638-68c8-51344debc9af",
			"headers": "Authorization: {{Test1 auth}}\nContent-Type: application/json\n",
			"url": "{{URL}}tasks/{{testTask1.id}}",
			"preRequestScript": "",
			"pathVariables": {},
			"method": "GET",
			"data": [],
			"dataMode": "params",
			"version": 2,
			"tests": "\nvar data1 = {\"group_id\":environment[\"testGroup1.id\"],\"name\":\"testTask1\",\"description\":\"partial change to description\"};\n\nvar data2 = xmlToJson(responseBody);\n\ndelete data2.task.id;\ndelete data2.task.creation_timestamp;\ndelete data2.task.duration;\ndelete data2.task.finished;\ntests[\"testTask1 correct data\"] = JSON.stringify(data1) == JSON.stringify(data2.task);\n",
			"time": 1408471960858,
			"name": "Verify testTask1 after partial update",
			"description": "",
			"collectionId": "e2bc2ac2-40ba-2866-aab2-16b5fd2d6f61",
			"responses": [],
			"synced": false
		},
		{
			"id": "c9a3c662-915a-406a-f6b1-a206530e877b",
			"headers": "Authorization: {{Test1 auth}}\nContent-Type: application/json\n",
			"url": "{{URL}}posts/{{testPost1.id}}",
			"preRequestScript": "",
			"pathVariables": {},
			"method": "PUT",
			"data": "{\"content\":\"full change to content\"}",
			"dataMode": "raw",
			"version": 2,
			"tests": "\n\n\n\ntests[\"Status code is 200\"] = responseCode.code === 200;",
			"time": 1408395679841,
			"name": "Full Update testPost1",
			"description": "",
			"collectionId": "e2bc2ac2-40ba-2866-aab2-16b5fd2d6f61",
			"responses": [],
			"synced": false
		},
		{
			"id": "de338425-92f9-e431-368b-774b0fa06ce3",
			"headers": "Authorization: {{Test1 auth}}\nContent-Type: application/json\n",
			"url": "{{URL}}users/{{Test1.id}}",
			"preRequestScript": "",
			"pathVariables": {},
			"method": "GET",
			"data": [],
			"dataMode": "params",
			"version": 2,
			"tests": "\nvar data1 = {\"username\":\"Test1\", \"firstName\":\"first\", \"lastName\":\"last\", \"city\":\"houston\", \"homePhone\":\"2818888208\",\"cellPhone\":\"1234567890\", \"email\":\"test@gmail.com\"};\n\nvar data2 = xmlToJson(responseBody);\n\ndelete data2.user.id;\ndelete data2.user.insertionDate;\ntests[\"Correct Test1 data\"] = JSON.stringify(data1) == JSON.stringify(data2.user);\n\n\n",
			"time": 1408303236005,
			"name": "Verify User Test1",
			"description": "",
			"collectionId": "e2bc2ac2-40ba-2866-aab2-16b5fd2d6f61",
			"responses": [],
			"synced": false
		},
		{
			"id": "e99b9ed8-58fa-3904-cf53-a35886268bf1",
			"headers": "Authorization: {{Test1 auth}}\nContent-Type: application/json\n",
			"url": "{{URL}}users/{{Test1.id}}",
			"preRequestScript": "",
			"pathVariables": {},
			"method": "GET",
			"data": [],
			"dataMode": "params",
			"version": 2,
			"tests": "\nvar data1 = {\"username\":\"Test1\", \"firstName\":\"first\", \"lastName\":\"Last\", \"city\":\"houston\",\"cellPhone\":\"1234567890\", \"email\":\"testupdate@gmail.com\"};\n\nvar data2 = xmlToJson(responseBody);\n\ndelete data2.user.id;\ndelete data2.user.insertionDate;\ntests[\"Correct Test1 data\"] = JSON.stringify(data1) == JSON.stringify(data2.user);\n\n\n",
			"time": 1408328937194,
			"name": "Verify User Test1 after full update",
			"description": "",
			"collectionId": "e2bc2ac2-40ba-2866-aab2-16b5fd2d6f61",
			"responses": [],
			"synced": false
		},
		{
			"id": "f1204406-b381-ddd8-28e4-f83f9445965c",
			"headers": "Authorization: {{Test1 auth}}\nContent-Type: application/json\n",
			"url": "{{URL}}posts/{{testPost1.id}}",
			"preRequestScript": "",
			"pathVariables": {},
			"method": "GET",
			"data": [],
			"dataMode": "params",
			"version": 2,
			"tests": "\nvar data1 = { \"group_id\":environment[\"testGroup1.id\"], \"user_id\":environment[\"Test1.id\"], \"content\":\"partial change to content\", \"like_count\":\"0\"};\n\nvar data2 = xmlToJson(responseBody);\n\ndelete data2.post.id;\ndelete data2.post.creation_timestamp;\ndelete data2.post.latest_activity_timestamp;\ntests[\"testPost1 correct data\"] = JSON.stringify(data1) == JSON.stringify(data2.post);\n\n\n\n\n\n\npostman.setEnvironmentVariable(\"data\", JSON.stringify(data1));\npostman.setEnvironmentVariable(\"data2\", JSON.stringify(data2.post));",
			"time": 1408395536076,
			"name": "Verify testPost1 after partial update",
			"description": "",
			"collectionId": "e2bc2ac2-40ba-2866-aab2-16b5fd2d6f61",
			"responses": [],
			"synced": false
		},
		{
			"id": "f614ee23-34df-23e5-2b83-dba508a68e24",
			"headers": "Authorization: {{Test1 auth}}\nContent-Type: application/json\n",
			"url": "{{URL}}posts/{{testPost1.id}}",
			"preRequestScript": "",
			"pathVariables": {},
			"method": "POST",
			"data": "{\"content\":\"partial change to content\"}",
			"dataMode": "raw",
			"version": 2,
			"tests": "\n\n\n\ntests[\"Status code is 200\"] = responseCode.code === 200;",
			"time": 1408392854692,
			"name": "Partial Update testPost1",
			"description": "",
			"collectionId": "e2bc2ac2-40ba-2866-aab2-16b5fd2d6f61",
			"responses": [],
			"synced": false
		}
	]
}